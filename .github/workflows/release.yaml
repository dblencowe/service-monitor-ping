on:
  release:
    types: [created]

jobs:
  release-linux-amd64:
    name: release linux/amd64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: wangyoucao577/go-release-action@v1.22
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: linux
          goarch: amd64
          extra_files: README.md
          ldflags: "-s -w"
  release-darwin:
    name: release darwin/amd64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: wangyoucao577/go-release-action@v1.22
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: darwin
          goarch: amd64
          extra_files: README.md
          ldflags: "-s -w"
  release-container:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        # list of Docker images to use as base name for tags
        images: |
          ghcr.io/dblencowe/service-monitor-ping
        # generate Docker tags based on the following events/attributes
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha
    - name: Build image and push to Docker Hub and GitHub Container Registry
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        tags: |
          ghcr.io/dblencowe/service-monitor-ping:latest
          ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        push: true
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
